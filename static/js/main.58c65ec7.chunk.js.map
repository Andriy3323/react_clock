{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","toLocaleTimeString","interval","handleDocument","setState","window","console","log","this","setInterval","prevProps","prevName","name","currName","props","clearInterval","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","clockName","renderClock","hideClock","changeClockName","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAyB,CACvBC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,SAAW,EALb,EAwBEC,eAAiB,WACf,IAAMJ,GAAO,IAAIC,MAAOC,qBAExB,EAAKG,SAAS,CAAEL,SAChBM,OAAOC,QAAQC,IAAIR,IA5BvB,uDAOE,WACES,KAAKN,SAAWG,OAAOI,YAAYD,KAAKL,eAAgB,OAR5D,gCAWE,SAAmBO,GACjB,IAAcC,EAAaD,EAAnBE,KACMC,EAAaL,KAAKM,MAAxBF,KAEJD,IAAaE,GACfR,OAAOC,QAAQC,IAAf,qCAAiDI,EAAjD,eAAgEE,MAhBtE,kCAoBE,WACER,OAAOU,cAAcP,KAAKN,YArB9B,oBA+BE,WACE,OACE,qCACE,4BAAIM,KAAKM,MAAMF,OADjB,0BAEsBJ,KAAKV,MAAMC,aAnCvC,GAA2BiB,aCN3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,G,IAQZK,E,4MACJzB,MAAyB,CACvB0B,UAAU,EACVC,UAAWR,K,EAGbf,SAAW,E,EAaXwB,YAAc,WACZ,EAAKtB,SAAS,CAAEoB,UAAU,K,EAG5BG,UAAY,WACV,EAAKvB,SAAS,CAAEoB,UAAU,K,EAG5BI,gBAAkB,WAChB,EAAKxB,SAAS,CAAEqB,UAAWR,O,uDApB7B,WACEY,SAASC,iBAAiB,QAAStB,KAAKkB,aACxCG,SAASC,iBAAiB,cAAetB,KAAKmB,WAE9CnB,KAAKN,SAAWG,OAAOI,YAAYD,KAAKoB,gBAAiB,Q,kCAG3D,WACEb,cAAcP,KAAKN,Y,oBAerB,WACE,MAAgCM,KAAKV,MAA7B0B,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,gCACE,uCAEA,8BACGD,GAAY,cAAC,EAAD,CAAOZ,KAAMa,a,GAvClBT,aA8CHO,IC1DfQ,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.58c65ec7.chunk.js","sourcesContent":["import { Component, ReactNode } from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  date: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date().toLocaleTimeString(),\n  };\n\n  interval = 0;\n\n  componentDidMount() {\n    this.interval = window.setInterval(this.handleDocument, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { name: prevName } = prevProps;\n    const { name: currName } = this.props;\n\n    if (prevName !== currName) {\n      window.console.log(`The clock was renamed from ${prevName} to ${currName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.interval);\n  }\n\n  handleDocument = () => {\n    const date = new Date().toLocaleTimeString();\n\n    this.setState({ date });\n    window.console.log(date);\n  };\n\n  render(): ReactNode {\n    return (\n      <>\n        <p>{this.props.name}</p>\n        {`Current time is ${this.state.date}`}\n      </>\n    );\n  }\n}\n","import { Component, ReactNode } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nclass App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  interval = 0;\n\n  componentDidMount() {\n    document.addEventListener('click', this.renderClock);\n    document.addEventListener('contextmenu', this.hideClock);\n\n    this.interval = window.setInterval(this.changeClockName, 3300);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  renderClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  hideClock = () => {\n    this.setState({ hasClock: false });\n  };\n\n  changeClockName = () => {\n    this.setState({ clockName: getRandomName() });\n  };\n\n  render(): ReactNode {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div>\n        <h1>Clock</h1>\n\n        <div>\n          {hasClock && <Clock name={clockName} />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}